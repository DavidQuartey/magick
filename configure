#!/bin/bash
# Anticonf script by Jeroen Ooms (2016)
# The script will try 'Magick++-config' and 'pkg-config' to find required
# cflags and ldflags. Make sure this executable is in PATH when installing
# the package. Alternatively, you can set INCLUDE_DIR and LIB_DIR manually:
# R CMD INSTALL --configure-vars='INCLUDE_DIR=/.../include LIB_DIR=/.../lib'

# Library settings
PKG_CONFIG_NAME="ImageMagick++"
PKG_DEB_NAME="libmagick++-dev"
PKG_RPM_NAME="ImageMagick-c++-devel"
PKG_CSW_NAME="imagemagick_dev"
PKG_BREW_NAME="imagemagick"
PKG_TEST_HEADER="<Magick++.h>"
PKG_LIBS="-lMagick++-6.Q16"

# Use Magick++-config (on Solaris /opt/csw/bin must be in PATH)
if [ $(command -v pkg-config) ]; then
  PKGCONFIG_CFLAGS=$(pkg-config --cflags --silence-errors ${PKG_CONFIG_NAME})
  PKGCONFIG_LIBS=$(pkg-config --libs ${PKG_CONFIG_NAME})
fi

if [ -z "$PKGCONFIG_LIBS"]; then
  if [ $(command -v Magick++-config) ]; then
    PKGCONFIG_CFLAGS=$(Magick++-config --cflags)
    PKGCONFIG_LIBS=$(Magick++-config --libs)
  elif [ $(command -v GraphicsMagick++-config) ]; then
    PKGCONFIG_CFLAGS=$(GraphicsMagick++-config --cflags)
    PKGCONFIG_LIBS=$(GraphicsMagick++-config --libs)
  fi
fi

# Note that cflags may be empty in case of success
if [ "$INCLUDE_DIR" ] || [ "$LIB_DIR" ]; then
  echo "Found INCLUDE_DIR and/or LIB_DIR!"
  PKG_CFLAGS="-I$INCLUDE_DIR $PKG_CFLAGS"
  PKG_LIBS="-L$LIB_DIR $PKG_LIBS"
elif [ "$PKGCONFIG_CFLAGS" ] || [ "$PKGCONFIG_LIBS" ]; then
  echo "Found pkg-config cflags and libs!"
  PKG_CFLAGS=${PKGCONFIG_CFLAGS}
  PKG_LIBS=${PKGCONFIG_LIBS}
elif [[ "$OSTYPE" == "darwin"* ]]; then
  if [ $(command -v brew) ]; then
    BREWDIR=$(brew --prefix)
    INCLUDE_DIR=$(echo /usr/local/opt/imagemagick/include/*)
    PKG_CFLAGS="-I$INCLUDE_DIR -DMAGICKCORE_QUANTUM_DEPTH=16 -DMAGICKCORE_HDRI_ENABLE=0"
    PKG_LIBS="-L$BREWDIR/opt/$PKG_BREW_NAME/lib $PKG_LIBS"
  else
    BREWDIR="/tmp/homebrew"
    rm -Rf $BREWDIR
    mkdir -p $BREWDIR
    echo "Auto-brewing $PKG_BREW_NAME in $BREWDIR..."
    curl -fsSL https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C $BREWDIR
    HOMEBREW_CACHE="/tmp" $BREWDIR/bin/brew install pkg-config $PKG_BREW_NAME 2>&1 | perl -pe 's/Warning/Note/gi'

    # Rebuild imagemagick --without-modules
    HOMEBREW_CACHE="/tmp" $BREWDIR/bin/brew uninstall --force imagemagick 2>&1 | perl -pe 's/Warning/Note/gi'
    HOMEBREW_CACHE="/tmp" $BREWDIR/bin/brew install tools/imagemagick.rb 2>&1 | perl -pe 's/Warning/Note/gi'

    PKG_CFLAGS=$($BREWDIR/opt/pkg-config/bin/pkg-config --cflags $PKG_CONFIG_NAME)
    PKG_LIBS=$($BREWDIR/opt/pkg-config/bin/pkg-config --libs --static $PKG_CONFIG_NAME libpng)
    PKG_LIBS="-L$BREWDIR/lib $PKG_LIBS" #pkg-config misses a few paths
    rm -f $BREWDIR/lib/*.dylib
    rm -f $BREWDIR/Cellar/*/*/lib/*.dylib
  fi
fi

# Find compiler
CXXCPP=$(${R_HOME}/bin/R CMD config CXXCPP)
CXXFLAGS=$(${R_HOME}/bin/R CMD config CXXFLAGS)
CPPFLAGS=$(${R_HOME}/bin/R CMD config CPPFLAGS)

# For debugging
echo "Using PKG_CFLAGS=$PKG_CFLAGS"
echo "Using PKG_LIBS=$PKG_LIBS"

# Test configuration
echo "#include $PKG_TEST_HEADER" | ${CXXCPP} ${CPPFLAGS} ${PKG_CFLAGS} ${CXXFLAGS} -xc++ - >/dev/null 2>&1

# Customize the error
if [ $R_CONFIG_ERROR ]; then
  echo "------------------------- ANTICONF ERROR ---------------------------"
  echo "Configuration failed because $PKG_CONFIG_NAME was not found. Try installing:"
  echo " * deb: $PKG_DEB_NAME (Debian, Ubuntu)"
  echo " * rpm: $PKG_RPM_NAME (Fedora, CentOS, RHEL)"
  echo " * csw: $PKG_CSW_NAME (Solaris)"
  echo " * brew: $PKG_BREW_NAME (OSX)"
  echo "If $PKG_CONFIG_NAME is already installed, check that 'pkg-config' is in your"
  echo "PATH and PKG_CONFIG_PATH contains a $PKG_CONFIG_NAME.pc file. If pkg-config"
  echo "is unavailable you can set INCLUDE_DIR and LIB_DIR manually via:"
  echo "R CMD INSTALL --configure-vars='INCLUDE_DIR=... LIB_DIR=...'"
  echo "--------------------------------------------------------------------"
  exit 1;
fi

# Write to Makevars
sed -e "s|@cflags@|$PKG_CFLAGS|" -e "s|@libs@|$PKG_LIBS|" src/Makevars.in > src/Makevars

# Success
exit 0
