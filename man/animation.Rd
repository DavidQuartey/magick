% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/animation.R
\name{animation}
\alias{animation}
\alias{image_animate}
\alias{image_apply}
\alias{image_mosaic}
\alias{image_montage}
\alias{image_morph}
\alias{image_flatten}
\alias{image_average}
\alias{image_append}
\alias{image_coalesce}
\title{Animation and Frames}
\usage{
image_animate(image, fps = 10, loop = 0, dispose = c("background",
  "previous", "none"))

image_apply(image, FUN, ...)

image_mosaic(image, operator = NULL)

image_montage(image)

image_morph(image, frames)

image_flatten(image, operator = NULL)

image_average(image)

image_append(image, stack = FALSE)

image_coalesce(image)
}
\arguments{
\item{image}{object returned by \code{image_read}}

\item{fps}{frames per second}

\item{loop}{how many times to repeat the animation. Default is infinite.}

\item{dispose}{frame disposal method. See
\href{http://www.imagemagick.org/Usage/anim_basics/}{documentation}}

\item{FUN}{a function to be called on each frame in the image}

\item{...}{additional parameters for \code{FUN}}

\item{operator}{string with a
\href{https://www.imagemagick.org/Magick++/Enumerations.html#CompositeOperator}{composite operator}.}

\item{frames}{number of frames to use in output animation}

\item{stack}{place images top-to-bottom (TRUE) or left-to-right (FALSE)}
}
\description{
Operations specifically for images with multiple frames.

\code{image_apply} calls a transformation function to each frame of the image and
joints the result back into a single image. Because most operations are already
vectorized this is often not needed. Note that \code{FUN} should return an image.
To apply other kinds of functions simply use \link{lapply} or \link{vapply}, etc.
}
\examples{
# Combine with another image
logo <- image_read("https://www.r-project.org/logo/Rlogo.png")
oldlogo <- image_read("https://developer.r-project.org/Logo/Rlogo-3.png")

# Create morphing animation
both <- image_scale(c(oldlogo, logo), "400")
image_average(image_crop(both))
image_animate(image_morph(both, 10))
# Create thumbnails from GIF
banana <- image_read("https://jeroen.github.io/images/banana.gif")
length(banana)
image_average(banana)
image_flatten(banana)
image_append(banana)
image_append(banana, stack = TRUE)

# Append images together
wizard <- image_read("wizard:")
image_append(image_scale(c(image_append(banana[c(1,3)], stack = TRUE), wizard)))

image_composite(banana, image_scale(logo, "300"))

# Break down and combine frames
front <- image_scale(banana, "300")
background <- image_background(image_scale(logo, "400"), 'white')
frames <- image_apply(front, function(x){image_composite(background, x, offset = "+70+30")})
image_animate(frames, fps = 10)
}
\seealso{
Other image: \code{\link{attributes}}, \code{\link{color}},
  \code{\link{composite}}, \code{\link{device}},
  \code{\link{editing}}, \code{\link{effects}},
  \code{\link{image_compare}}, \code{\link{painting}},
  \code{\link{resize}}
}
