% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transformations.R
\name{transformations}
\alias{transformations}
\alias{image_despeckle}
\alias{image_reducenoise}
\alias{image_noise}
\alias{image_blur}
\alias{image_charcoal}
\alias{image_edge}
\alias{image_oilpaint}
\alias{image_emboss}
\alias{image_frame}
\alias{image_implode}
\alias{image_negate}
\alias{image_fill}
\alias{image_annotate}
\alias{image_convert}
\alias{image_compare}
\title{Image Transformations}
\usage{
image_despeckle(image, times = 1L)

image_reducenoise(image, radius = 1L)

image_noise(image, noisetype = "gaussian")

image_blur(image, radius = 1, sigma = 0.5)

image_charcoal(image, radius = 1, sigma = 0.5)

image_edge(image, radius = 1)

image_oilpaint(image, radius = 1)

image_emboss(image, radius = 1, sigma = 0.5)

image_frame(image, geometry = "25x25+6+6")

image_implode(image, factor = 0.5)

image_negate(image)

image_fill(image, color, point = "1x1", fuzz = 0)

image_annotate(image, text, gravity = "northwest", location = "+0+0",
  degrees = 0, size = 10, font = NULL, color = NULL,
  strokecolor = NULL, boxcolor = NULL)

image_convert(image, format = NULL, type = NULL, colorspace = NULL,
  depth = NULL, antialias = NULL)

image_compare(image, reference_image, metric = "")
}
\arguments{
\item{image}{object returned by \code{image_read}}

\item{times}{number of times to repeat the despeckle operation}

\item{radius}{radius, in pixels, for various transformations}

\item{noisetype}{integer betwee 0 and 5 with
\href{https://www.imagemagick.org/Magick++/Enumerations.html#NoiseType}{noisetype}.}

\item{sigma}{the standard deviation of the Laplacian, in pixels.}

\item{geometry}{a string with \href{https://www.imagemagick.org/Magick++/Geometry.html}{geometry syntax}
for example \code{"10x10+5-5"}}

\item{factor}{image implode factor (special effect)}

\item{color}{a valid \href{https://www.imagemagick.org/Magick++/Color.html}{color string} such as
\code{"navyblue"} or \code{"#000080"}}

\item{point}{string indicating the flood-fill starting point}

\item{fuzz}{Colors within this distance are considered equal.
Use this option to match colors that are close to the target color in RGB space.
I think max distance (from #000000 to #FFFFFF) is 256^3.}

\item{text}{annotation text}

\item{gravity}{string with
\href{https://www.imagemagick.org/Magick++/Enumerations.html#GravityType}{gravity type}}

\item{location}{geometry string with location relative to \code{gravity}}

\item{degrees}{value between 0 and 360 for how many degrees to rotate}

\item{size}{font-size in pixels}

\item{font}{rendering font. To use a TrueType font, precede the TrueType filename with an @.}

\item{strokecolor}{adds a stroke (border around the text)}

\item{boxcolor}{background color that annotation text is rendered on.}

\item{format}{output format such as \code{png}, \code{jpeg}, \code{gif} or \code{pdf}.
Can also be a bitmap type such as \code{rgba} or \code{rgb}.}

\item{type}{a magick \href{https://www.imagemagick.org/Magick++/Enumerations.html#ImageType}{ImageType}
classification for example 'grayscale' to convert to black/white}

\item{colorspace}{string with a magick \href{https://www.imagemagick.org/Magick++/Enumerations.html#ColorspaceType}{ColorspaceType}
for example 'grey' or 'rgb' or 'cmyk'}

\item{depth}{color depth, must be 8 or 16}

\item{antialias}{(TRUE/FALSE) enable anti-aliasing for text and strokes}

\item{reference_image}{another image to compare to}

\item{metric}{string with a
\href{http://www.imagemagick.org/script/command-line-options.php#metric}{metric type}}
}
\description{
Vectorized functions for transforming images. These functions apply
the same transformation to each frame in the image.
The \href{https://www.imagemagick.org/Magick++/STL.html}{Magick++ documentation}
explains meaning of each function and parameter. See \link{editing} for
functions to read or combine image sequences.
}
\details{
Each function returns a copy of the manipulated image; the input image will
be unaffected. Therefore operations can be piped with magrittr if you're
into that kind of stuff.
}
\examples{
logo <- image_read("logo:")
image_despeckle(logo)
image_reducenoise(logo)
image_noise(logo)
image_blur(logo, 10, 10)
image_charcoal(logo)
image_edge(logo)
image_oilpaint(logo)
image_emboss(logo)
image_frame(logo)
image_implode(logo)
image_negate(logo)
image_fill(image_flatten(logo), "red")
image_fill(image_flatten(logo), "red", fuzz = 25600)
# Add some text to an image
image_annotate(logo, "This is a test")
image_annotate(logo, "CONFIDENTIAL", size = 50, color = "red", boxcolor = "pink",
 degrees = 30, location = "+100+100")

# Setting fonts requires fontconfig support (and that you have the font)
myfont <- ifelse(identical("windows", .Platform$OS.type), "courier-new", "courier")
try(image_annotate(logo, "The quick brown fox", font = myfont, size = 50))
logo2 <- image_blur(logo)
if(magick_config()$version >= "6.8.7")
 image_compare(logo, logo2, metric = "phash")
}
\seealso{
Other image: \code{\link{animation}},
  \code{\link{attributes}}, \code{\link{contrast}},
  \code{\link{editing}}, \code{\link{resize}}
}
