% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edit.R
\name{editing}
\alias{editing}
\alias{image_read}
\alias{magick}
\alias{imagemagick}
\alias{image_write}
\alias{image_join}
\alias{image_display}
\alias{image_browse}
\alias{image_fft}
\alias{image_map}
\alias{image_info}
\title{Image Editing}
\usage{
image_read(path, density = NULL, depth = NULL)

image_write(image, path = NULL, format = NULL, quality = NULL,
  depth = NULL, density = NULL, comment = NULL, flatten = FALSE)

image_join(...)

image_display(image, animate = TRUE)

image_browse(image, browser = getOption("browser"))

image_fft(image)

image_map(image, map, dither = FALSE)

image_info(image)
}
\arguments{
\item{path}{file path, URL, or raw array or \code{nativeRaster} with image data}

\item{density}{resolution to render pdf or svg}

\item{depth}{image depth. Must be 8 or 16}

\item{image}{object returned by \code{image_read}}

\item{format}{output format such as \code{png}, \code{jpeg}, \code{gif} or \code{pdf}.
Can also be a bitmap type such as \code{rgba} or \code{rgb}.}

\item{quality}{number between 0 and 100 for jpeg quality. Defaults to 75.}

\item{comment}{text string added to the image metadata for supported formats}

\item{flatten}{should image be flattened before writing? This also replaces
transparency with background color.}

\item{...}{images or lists of images to be combined into a image}

\item{animate}{support animations in the X11 display}

\item{browser}{argument passed to \link[utils:browseURL]{browseURL}}

\item{map}{reference image to map colors from}

\item{dither}{set TRUE to enable dithering}
}
\description{
Read, write and join or combine images. All image functions are vectorized,
meaning they operate either on a single frame or a series of frames (e.g. a
collage, video, or animation).
The \href{https://www.imagemagick.org/Magick++/STL.html}{Magick++ documentation}
explains meaning of each function and parameter.
}
\details{
Besides these functions also R-base functions such as \code{c()}, \code{[},
\code{as.list()}, \code{as.raster()}, \code{rev}, \code{length}, and \code{print}
can be used to work with image frames.
See \link{transformations} for vectorized
image manipulation functions such as cutting and applying effects.

Some configurations of ImageMagick++ support reading SVG files but the rendering
is not always very pleasing. Better results can be obtained by first rendering
svg to a png using the \href{https://cran.r-project.org/package=rsvg}{rsvg package}.
}
\examples{
# Download image from the web
frink <- image_read("https://jeroen.github.io/images/frink.png")
worldcup_frink <- image_fill(frink, "orange", "+100+200", 30000)
image_write(worldcup_frink, "output.png")

# Plot to graphics device via legacy raster format
raster <- as.raster(frink)
par(ask=FALSE)
plot(raster)

# Read bitmap arrays
curl::curl_download("https://www.r-project.org/logo/Rlogo.png", "Rlogo.png")
image_read(png::readPNG("Rlogo.png"))

curl::curl_download("https://jeroen.github.io/images/example.webp", "example.webp")
image_read(webp::read_webp("example.webp"))

curl::curl_download("http://jeroen.github.io/images/tiger.svg", "tiger.svg")
image_read(rsvg::rsvg("tiger.svg"))
}
\references{
Magick++ Image STL: \url{https://www.imagemagick.org/Magick++/STL.html}
}
\seealso{
Other image: \code{\link{animation}},
  \code{\link{attributes}}, \code{\link{contrast}},
  \code{\link{resize}}, \code{\link{transformations}}
}
